{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/childview/childview.component.ts","webpack:///src/app/components/childview/childview.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/components/views/views.component.ts","webpack:///src/app/components/views/views.component.html","webpack:///src/app/components/wholeview/wholeview.component.ts","webpack:///src/app/components/wholeview/wholeview.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/file.service.ts","webpack:///src/app/services/g.service.ts","webpack:///src/app/services/interceptor.service.ts","webpack:///src/app/services/linkgen.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","appRoutes","path","component","canActivate","AppModule","provide","useClass","multi","config","declarations","providers","bootstrap","ChildviewComponent","delGetmeEvent","updateGetmeEvent","needToUpdate","upd_topic","getme","topic","upd_issue","issue","upd_view","view","emit","value","HomeComponent","LoginComponent","router","authService","getCookie","navigate","loginAuth","NavbarComponent","logout","ProfileComponent","fileService","isImage","editBool","imageSrc","getProfile","subscribe","data","console","log","bio","profile","photoArray","prof_photo_ids","files","fileToUpload","item","name","undefined","postFile","success","editBio","photoId","status","find","photo","image_id","current","currentImage","window","location","reload","deleteImage","currentBio","SettingsComponent","linkgen","SidebarComponent","ViewsComponent","gService","getme_list","isShow","loadGetme","getme_views","usergetme","_id","push","length","loadList","addGetme","new_id","upd_getme","editGetme","deleteGetme","filter","selectedGetme","showGetmeForm","delGetme","WholeviewComponent","AuthGuard","next","state","loggedIn","providedIn","AuthService","http","cs","jwtHelper","cookieValue","JSON","parse","get","storeUserData","jwt","user","token","setItem","stringify","authToken","isTokenExpired","clear","FileService","file","formData","FormData","append","post","photoID","put","httpOptions","headers","GService","InterceptorService","cloned","clone","set","handle","LinkgenService","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div id=\"container\">\n  <app-sidebar></app-sidebar>\n  <div id=\"sub-container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<!-- <div class=\"container\">\n  <router-outlet></router-outlet>\n</div> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { FormsModule } from '@angular/forms';\n//import { AngularSvgIconModule } from 'angular-svg-icon';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ViewsComponent } from './components/views/views.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { ChildviewComponent } from './components/childview/childview.component';\nimport { WholeviewComponent } from './components/wholeview/wholeview.component';\n\nimport { AuthService } from './services/auth.service';\nimport { GService } from './services/g.service';\nimport { InterceptorService } from './services/interceptor.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { SettingsComponent } from './components/settings/settings.component';\n\n\n\nexport function tokenGetter(){\n  return localStorage.getItem(\"jwt\");\n}\n\nconst appRoutes: Routes = [\n  { path:'', component: HomeComponent },\n  { path:'login', component: LoginComponent},\n  { path:'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n  { path:'views', component: WholeviewComponent, canActivate: [AuthGuard]},\n  { path:'settings', component: SettingsComponent, canActivate: [AuthGuard]}\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    ProfileComponent,\n    HomeComponent,\n    ViewsComponent,\n    SidebarComponent,\n    ChildviewComponent,\n    WholeviewComponent,\n    SettingsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    //AngularSvgIconModule.forRoot(),\n    FormsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter\n      }\n    })\n  ],\n  providers: [AuthService, GService, CookieService, AuthGuard, { provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { Getme, UserGetme } from '../../interfaces/getme';\n\n@Component({\n  selector: 'app-childview',\n  templateUrl: './childview.component.html',\n  styleUrls: ['./childview.component.css']\n})\nexport class ChildviewComponent implements OnInit {\n  @Input() getme: UserGetme;\n  // Output and EventEmitter work hand-in-hand\n  @Output() delGetmeEvent = new EventEmitter<string>();\n  @Output() updateGetmeEvent = new EventEmitter<any>();\n  selectedGetme: UserGetme;\n\n  upd_topic: string;\n  upd_issue: string;\n  upd_view: string;\n\n  needToUpdate = false;\n\n  update_button() {\n    this.needToUpdate = true;\n    // Allows us to prefill values from selected getme upon pressing update button\n    // and modeling our upd values to the update form\n    this.upd_topic = this.getme.topic;\n    this.upd_issue = this.getme.issue;\n    this.upd_view = this.getme.view;\n  }\n\n  save_button(){\n    // Using the current getme, and assigning changes in following fields \n    // to that getme and emitting the updated getme to the parent component\n    this.getme.topic = this.upd_topic;\n    this.getme.issue = this.upd_issue;\n    this.getme.view = this.upd_view;\n    this.updateGetmeEvent.emit(this.getme);\n    // Hiding update form after pressing save button\n    this.needToUpdate = false;\n  }\n\n  deleteGetme(value: string) {\n    this.delGetmeEvent.emit(value);\n    // used to erase deleted getme values from UI\n    this.getme.topic = \"\";\n    this.getme.issue = \"\";\n    this.getme.view = \"\";\n  }\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    /* if(this.getme){\n      this.getme_view.topic = this.getme.topic;\n      this.getme_view.issue = this.getme.issue;\n      this.getme_view.view = this.getme.view;\n    }  */\n\n  }\n\n}\n","\n\n<div *ngIf=\"getme\" id=\"childview-container\">\n\n    <div *ngIf=\"!needToUpdate\" id=\"getme-display\">\n        <h2>{{ getme.topic }}</h2>\n        <h3>{{ getme.issue }}</h3>\n        <p>{{ getme.view }}</p>\n    </div>\n    <form *ngIf=\"needToUpdate\" id=\"getme-update\">\n        <div class=\"form-group\">\n            <label>Topic</label>\n            <input type=\"text\" [(ngModel)]=\"upd_topic\" name=\"upd_topic\" class=\"form-control\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>Is there a current issue?</label>\n            <input type=\"text\" [(ngModel)]=\"upd_issue\" name=\"upd_issue\"  class=\"form-control\"/>\n        </div>\n        <div class=\"form-group\">\n            <label>What is your view on this topic?</label>\n            <input type=\"text\" style=\"height:200px;font-size:14px;\" [(ngModel)]=\"upd_view\" name=\"upd_view\" class=\"form-control\"/>\n        </div>  \n        \n    </form>\n\n    <div id=\"button-container\">\n        <button *ngIf=\"!needToUpdate\" (click)=\"update_button()\" id=\"update-button\" >Update</button>\n        <button *ngIf=\"needToUpdate\" (click)=\"save_button()\" id=\"save-button\">Save</button>\n        <button *ngIf=\"needToUpdate\" (click)=\"needToUpdate = false;\" id=\"cancel-button\">Cancel</button>\n        <img (click)=\"deleteGetme(getme._id)\" id=\"delete-button\" src=\"assets/img/delete-24px.svg\" alt=\"delete\">\n    </div>\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"container\">\n    <div class=\"jumbotron\">\n        <h1>Getme</h1>\n        <h2>Welcomes You</h2>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private router: Router, \n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n  \n  loginAuth(){\n    this.authService.getCookie();\n    this.router.navigate(['profile']);\n  }\n\n  \n}\n","<button (click)=\"loginAuth()\">\n    Continue\n</button>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n\n    this.router.navigate(['']);\n    return false;\n  }\n  \n}\n","<nav class=\"navbar navbar-light bg-light\">\n  <div class=\"container\">\n      <a [routerLink]=\"['/']\">getme</a>\n      <!--<a [routerLink]=\"['/']\" class=\"navbar-brand\">\n        <img src=\"../../../assets/img/getme_logo.png\">\n      </a>-->\n      <div class=\"dropdown\">\n        \n        <button *ngIf=\"!authService.loggedIn()\" class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Login\n        </button>\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          <a class=\"dropdown-item\" href=\"http://localhost:3000/auth/google\"  >Google</a>\n          <a class=\"dropdown-item\" href=\"http://localhost:3000/auth/facebook\">Facebook</a>\n          <a class=\"dropdown-item\" href=\"http://localhost:3000/auth/twitter\">Twitter</a>\n        </div>\n\n        <!--<li *ngIf=\"authService.loggedIn()\"><a (click)=\"onLogoutClick()\" href=\"#\"></a></li>-->\n      </div>\n      <div *ngIf=\"authService.loggedIn()\" class=\"logout\">\n        <a (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n      </div>\n      <!-- <li *ngIf=\"authService.loggedIn()\"><a (click)=\"onLogoutClick()\" href=\"#\"></a></li> -->\n    \n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FileService } from '../../services/file.service';\n\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  fileToUpload: File;\n  isImage = false;\n  editBool = false;\n  /* changePic = false;\n  showBioform = false; */\n  photoArray: Array<any>;\n  bio: string;\n  currentBio: string;\n  imageSrc = \"../../../assets/img/default-profile.png\";\n\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public fileService: FileService\n  ) { }\n\n  ngOnInit(): void {\n    this.fileService.getProfile().subscribe(data => {\n      console.log(\"we are here\");\n      this.bio = data.profile.bio;\n      this.photoArray = data.profile.prof_photo_ids;\n      // we will loop through this photo_array in the front end \n      \n    });\n  } \n\n  fileUpload(files: FileList){\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload.name);\n  }\n\n  submitFile(){\n    if(this.fileToUpload != undefined){\n      this.fileService.postFile(this.fileToUpload).subscribe(data => {\n        if(data.success){\n          console.log( \"The file was received on the backend!\");\n        }\n      });\n      this.fileToUpload = null;\n    }\n    else{\n      this.fileService.editBio(this.bio).subscribe(data => {\n        if(data.success){\n          console.log(\"Bio updated\");\n        }\n      });\n    }\n    \n  }\n\n  chooseCurrent(photoId){\n    let status = this.photoArray.find(photo => photo.image_id === photoId);\n    if(status.current){\n      return;\n    }\n    this.fileService.currentImage(photoId).subscribe(data => {\n      if(data.success){\n        window.location.reload();\n        console.log('Updated Profile Picture');\n        \n      }\n      \n    });\n  }\n\n  deletePhoto(photoId){\n    this.fileService.deleteImage(photoId).subscribe(data => {\n      if(data.success){\n        window.location.reload();\n        console.log('Deleted the image');\n      }\n    });\n  }\n\n  setBio(){\n    /* if(this.bio ===){\n      this.fileService.postBio(this.bio).subscribe(data => {\n        if(data.success){\n          console.log(\"We have the bio\");\n        }\n      });\n    } */\n\n    this.currentBio = this.bio;\n    \n      \n    \n  }\n\n}\n","<div id=\"profile-container\">\n    <button *ngIf=\"!editBool\" (click)=\"editBool=true;\" id=\"edit\">Edit</button>\n    <div id=\"photo-container\">\n        <div *ngFor=\"let photo of photoArray\" id=\"photo\">\n            <img (click)=\"chooseCurrent(photo.image_id)\" *ngIf=\"photo.current || editBool\" src=\"http://localhost:3000/profile_images/{{photo.image_id}}\" >\n            <button (click)=\"deletePhoto(photo.image_id)\" *ngIf=\"editBool\" id=\"delete-button\">Delete</button>\n\n            <!-- <button *ngIf=\"!changePic\" (click)=\"changePic=true;\" id=\"edit-pic\">Edit Pic</button> -->\n            \n        </div>\n    </div>\n        \n    <div id=\"profile-form\">\n        <form *ngIf=\"editBool\" enctype=\"multipart/form-data\">\n            <div class=\"form-group\">\n                <input type=\"file\" name=\"profile_photo\" id=\"photo-input-field\" (change)=\"fileUpload($event.target.files)\">\n            </div>\n            <div class=\"form-group\">\n                <input type=\"text\" [(ngModel)]=\"bio\" name=\"bio\" id=\"bio-input-field\" class=\"form-control\">\n            </div>\n            \n        </form>\n        <button *ngIf=\"editBool\" (click)=\"editBool=false;\" id=\"cancel-button\">Cancel</button>\n        <button *ngIf=\"editBool\" (click)=\"submitFile(); editBool=false;\" id=\"save-button\">Save</button>\n        \n    </div>\n\n    <div id=\"bio\" >\n        <section class=\"bg-light\">\n            <p>{{ bio }}</p>\n        </section>\n    </div>\n    \n\n    \n</div>\n ","import { Component, OnInit } from '@angular/core';\nimport { LinkgenService } from '../../services/linkgen.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor(private linkgen: LinkgenService) { }\n\n  ngOnInit(): void {\n  }\n\n  generateLink(){\n    \n  }\n\n}\n","<div id=\"settings-container\">\n    <button id=\"link-button\"></button>\n    <p id=\"link\"></p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor(private router: Router, public authService: AuthService ) { }\n\n  ngOnInit(): void {\n  }\n  \n\n}\n","<div id=\"sidebar\" *ngIf=\"authService.loggedIn()\">\n    <!--<ul class=\"sidebar-container\">-->\n    <a [routerLink]=\"['/profile']\" id=\"profile-pill\" >Profile</a>\n    <a [routerLink]=\"['/views']\" id=\"views-pill\" >Views</a>\n    <a [routerLink]=\"['/settings']\" id=\"settings-pill\">Settings</a>\n</div>\n<!-- <div class=\"tab-content\" id=\"v-pills-tabContent\">\n  <div class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\"></div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GService } from '../../services/g.service';\nimport { Getme, UserGetme } from '../../interfaces/getme';\n\n@Component({\n  selector: 'app-views',\n  templateUrl: './views.component.html',\n  styleUrls: ['./views.component.css'],\n  \n})\nexport class ViewsComponent implements OnInit {\n  getme_list: UserGetme[] = [];\n  getme: Getme;\n  usergetme: UserGetme;\n  _id: string;\n  topic: string;\n  issue: string;\n  view: string; \n  isShow = true;\n  selectedGetme: UserGetme;\n\n  constructor(private router: Router, public gService: GService) { }\n\n  loadList(){\n    this.gService.loadGetme().subscribe(data => {\n      if(data.success){\n        \n        for(var item of data.getme_views.getme_views){\n        \n          this.usergetme = {\n            _id: item._id,\n            topic: item.topic,\n            issue: item.issue,\n            view: item.view\n          };\n          this.getme_list.push(this.usergetme); \n        }\n        \n      }\n      \n    });\n  }\n\n  ngOnInit(): void {\n    // Here is where we will use gService to retrieve the user's getme's from the database\n    // by subscribing to an Observable\n    if(this.getme_list.length == 0) this.loadList();\n  }\n\n  showGetmeForm(){\n    this.isShow = !this.isShow;\n  }\n\n  onGetmeSubmit(){\n    this.getme = {\n      topic: this.topic,\n      issue: this.issue,\n      view: this.view\n    };\n\n    //this.getme_list.push(this.getme);\n\n    // The new getme id is returned and pushed on to the usergetme list\n    this.gService.addGetme(this.getme).subscribe(data => {\n      if(data.success){\n        console.log(\"Added your Getme!\");\n        // creating usergetme with _id response that we received from backend\n        this.usergetme = {\n          _id: data.new_id,\n          topic: this.topic,\n          issue: this.issue,\n          view: this.view\n        };\n\n        this.getme_list.push(this.usergetme);\n      }\n    });\n\n    //refreshes page after getme is added, in order for a getme to be deleted later\n    window.location.reload();\n    //this.router.navigate(['/views']);\n\n  }\n\n  // receives an input from childview to update and use editGetme to save new getme to backend\n  editGetme(upd_getme){\n    this.gService.editGetme(upd_getme).subscribe(data => {\n      if(data.success) {\n        console.log(\"Updated Getme\");\n      }\n    });\n  }\n  \n\n  delGetme(_id: string) {\n    /* window.location.reload();\n    this.router.navigate(['/views']); */\n    // put topic in JSON because Express by default accepts requests with content-types: 'application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'\n    this.gService.deleteGetme(_id).subscribe(data => {\n      if(data.success) {\n        console.log(\"Deleted Getme\");\n        \n        // filtering out the the topic of the getme that we want to delete and returns a new getme list\n        this.getme_list = this.getme_list.filter(getme => getme._id !== data._id);\n\n        \n        //this.getme_list = []; //emptying getme_list\n        //this.loadList();      //reloading new list\n      }\n    });\n\n  }\n\n  showFullGetme(getme: UserGetme){\n    this.selectedGetme = getme;\n  }\n}\n","\n<div class=\"tab-pane fade show\" id=\"views-container\">\n    \n    <h1 id=\"views-header\">Views</h1>\n    <button id=\"getme-button\" (click)=\"showGetmeForm()\">+Getme</button>\n    <div class=\"break\"></div>\n    <p>\n        Here, you can create different topics, or GetMe's, covering certain beliefs on issues that matter to you most.\n    </p>\n    <!-- <input type=\"button\" value=\"New Getme\" class=\"new_getme\"> -->\n    <form *ngIf=\"!isShow\" (submit)=\"onGetmeSubmit()\" id=\"getme-form\">\n        <div>\n            <label>Topic</label>\n            <input type=\"text\" [(ngModel)]=\"topic\" name=\"topic\" class=\"form-control\">\n        </div>\n        <div>\n            <label>Is There A Current Issue?</label>\n            <input type=\"text\" [(ngModel)]=\"issue\" name=\"issue\" class=\"form-control\">\n        </div>\n        <div>\n            <label>What Is your View on this topic?</label>\n            <input type=\"text\" style=\"height:200px;font-size:14px;\" [(ngModel)]=\"view\" name=\"view\" class=\"form-control\">\n        </div>\n        <input id=\"getme-form-submit\" type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n    </form>\n    <div class=\"break\"></div>\n    <!-- $event is the child event payload-->\n    <section class=\"bg-light\">\n        <ul class=\"getme-list\">\n            <li *ngFor=\"let getme of getme_list\" [class.selected]=\"getme === selectedGetme\" (click)=\"showFullGetme(getme)\">\n                <h2>{{getme.topic}}</h2>\n                \n            </li>\n        </ul>\n    </section>\n    <div class=\"break\"></div>\n\n    <app-childview [getme]='selectedGetme' (delGetmeEvent)=\"delGetme($event)\" (updateGetmeEvent)=\"editGetme($event)\"> </app-childview>\n\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { GService} from '../../services/g.service';\n//import { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-wholeview',\n  templateUrl: './wholeview.component.html',\n  styleUrls: ['./wholeview.component.css']\n})\nexport class WholeviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // provides access to information about a route associated with a component that is loaded in an outlet\n    /* this.activatedRoute.paramMap.subscribe(()=> { // subscribe to paramMap property that contains a map of the req. and optional parameters specific to the route\n      // topic, issue, and view are passed from childview\n      this._id = window.history.state._id;\n      this.topic = window.history.state.topic; \n      this.issue = window.history.state.issue;\n      this.view = window.history.state.view;\n    }); */\n\n\n    \n  }\n\n  \n\n}\n","<div id=\"view-container\">\n    \n    <app-views></app-views>\n    \n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n/*\n  CanActivate is an interface that a class can implement to be a guard deciding if a route can be activated\n*/\nexport class AuthGuard implements CanActivate { \n\n  constructor(private router: Router, private authService: AuthService){\n\n  }\n\n  canActivate( next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree \n  {\n\n    if (!this.authService.loggedIn()){\n      this.router.navigate(['']);\n      return false;\n    }\n\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  /* ** Communicating w/ backend services using HTTP\n          Most front-end applications need to communicate w/ a server over the HTTP protocol, in order \n          to download or upload data and access other back-end services. Angular provides a\n          client HTTP API for Angular apps, the HttpClient service class in @angular/common/http\n  */\n\n  constructor(private http: HttpClient, private cs: CookieService, public jwtHelper: JwtHelperService) { }\n\n\n  getCookie(){\n    var cookieValue = JSON.parse(this.cs.get('jwt_user'));\n    this.storeUserData(cookieValue.jwt, cookieValue.user);\n    this.cs.delete('jwt_user');\n  }\n  \n  storeUserData(token, user){\n    localStorage.setItem('jwt', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('jwt');\n    this.authToken = token;\n  }\n\n  loggedIn(){\n   // true if token not available or expired\n   // flase if token is not\n    return !(this.jwtHelper.isTokenExpired());\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n    //this.cs.delete('jwt_user');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  constructor(private http: HttpClient) { }\n\n  postFile(file): Observable<any> {\n    const formData: FormData = new FormData();\n    formData.append('profile_photo', file, file.name);\n    return this.http.post<any>('upload_profile_pic', formData);\n  }\n\n  getProfile(): Observable<any> {\n    //let httpOptions = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.http.get<any>('profile');\n  }\n\n  getProfileImages(): Observable<any> {\n    return this.http.get<any>('profile_images');\n  }\n\n  currentImage(photoID): Observable<any> {\n    return this.http.put<any>(`update_current/${photoID}`, photoID);\n  }\n\n  deleteImage(photoID): Observable<any> {\n    return this.http.delete<any>(`delete_photo/${photoID}`);\n  }\n\n  postBio(bio): Observable<any> {\n    const httpOptions = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.http.post<any>('bio', {bio: bio}, httpOptions);\n  }\n\n  editBio(bio): Observable<any> {\n    return this.http.put<any>(`update_bio/${bio}`, bio);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GService {\n\n  constructor(private http: HttpClient) { }\n\n  addGetme(getme): Observable<any> {\n    let httpOptions = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.http.post<any>('addgetme', getme, httpOptions);\n  }\n\n  loadGetme(): Observable<any> {\n    let httpOptions = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.http.get<any>('loadgetme', httpOptions);\n  }\n\n  editGetme(getme): Observable<any> {\n    let httpOptions = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.http.put<any>(`editgetme/${getme._id}`, getme, httpOptions);\n  }\n\n  deleteGetme(id): Observable<any> {\n    //let httpOptions = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.http.delete<any>(`deletegetme/${id}`);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/*\n * Authentication HTTP Interceptor\n *    - used to add JWT in our Authorization header for every request that we make to access protected route on the backend server\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n// Using Angular's HTTPInterceptor interface\nexport class InterceptorService  implements HttpInterceptor{\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('jwt');\n\n    if(token) {\n      const cloned = req.clone({\n        headers: req.headers.set(\"Authorization\", `JWT ${token}`)\n      });\n\n      return next.handle(cloned);\n    }\n    else{\n      return next.handle(req);\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinkgenService {\n\n  constructor() { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}